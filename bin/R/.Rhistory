df$NUM_FLANKS[is.na(df$NUM_FLANKS)] <- 0  # Handle missing values in NUM_FLANKS
# Calculate the enrichment for each gene
df$Enrichment <- (df$NUM_VARIATIONS / df$GENE_LENGTH) /
((df$NUM_VARIATIONS + df$NUM_FLANKS) / df$TOTAL_LENGTH)
# Normalize the enrichment values (Z-score normalization)
df$Enrichment_ZScore <- scale(df$Enrichment)
# Define the list of special genes
special_genes <- c(
"FAM30A", "LINC01671", "lnc-SLCO4A1-8", "MIR4538", "SNAR-A1", "SNAR-B2",
"SNAR-C3", "SNAR-C4", "SNAR-G1", "SNAR-G2", "TRE-TTC5-1", "TRG-CCC6-1",
"TRG-CCC4-1", "TRV-CAC5-1"
)
# Create a new column to modify the GENE names for special coloring
df$GENE_LABEL <- ifelse(df$GENE %in% special_genes,
paste0("<span style='color:red;'>", df$GENE, "</span>"),
df$GENE)
# View the resulting dataframe with enrichment and Z-scores
head(df)
# Plot a histogram of the enrichment values
ggplot(df, aes(x = Enrichment)) +
geom_histogram(bins = 30, fill = 'indianred', color = 'black', alpha = 0.7) +
theme_minimal() +
labs(title = 'Histogram of Enrichment of Variations in Gene Length vs Total Length',
x = 'Enrichment',
y = 'Frequency')
# Save the histogram
ggsave('../../results/Enrichment_histogram.pdf', width = 15)
# Sort the dataframe based on Enrichment_ZScore (high to low)
df_sorted <- df %>% arrange(desc(Enrichment_ZScore))
# Reorder the GENE factor based on the sorted Enrichment_ZScore
df_sorted$GENE <- factor(df_sorted$GENE, levels = df_sorted$GENE)
# Plot a sorted histogram based on Z-scores with special gene labels
ggplot(df_sorted, aes(x = reorder(GENE, Enrichment_ZScore), y = Enrichment_ZScore)) +
geom_bar(stat = 'identity', fill = 'steelblue', color = 'black') +
theme_minimal() +
labs(title = 'Sorted Enrichment of Variations in Gene Length vs Total Length',
x = 'Gene',
y = 'Z-score of Enrichment') +
theme(axis.text.x = ggtext::element_markdown(angle = 90, hjust = 1)) + # Apply markdown for special genes
scale_x_discrete(labels = df_sorted$GENE_LABEL)  # Use modified labels for x-axis
# Save the sorted histogram plot
ggsave('../../results/Enrichment_sorted_histogram.pdf', width = 15)
# Load necessary libraries
library(dplyr)   # For data manipulation
library(ggplot2) # For plotting
library(scales)   # For scaling/normalization
library(ggtext)   # For colored text in ggplot
# Read the CSV file
df <- read.csv('../../results/EXTENDED_SNP_variation_summary.csv')
# Split variation types from the 'VARIATION_TYPES' field to get the number of variations
# Assuming the number of variations is embedded in the 'VARIATION_TYPES' field
df$NUM_VARIATIONS <- sapply(df$VARIATION_TYPES, function(x) {
sum(as.numeric(gsub(".*\\((\\d+)\\).*", "\\1", unlist(strsplit(x, ",\\s*")))))
})
# Fill NA values in NUM_VARIATIONS with 0
df$NUM_VARIATIONS[is.na(df$NUM_VARIATIONS)] <- 0
# Compute the total number of variations (gene + flank) for the denominator
df$NUM_FLANKS[is.na(df$NUM_FLANKS)] <- 0  # Handle missing values in NUM_FLANKS
# Calculate the enrichment for each gene
df$Enrichment <- (df$NUM_VARIATIONS / df$GENE_LENGTH) /
((df$NUM_VARIATIONS + df$NUM_FLANKS) / df$TOTAL_LENGTH)
# Normalize the enrichment values (Z-score normalization)
df$Enrichment_ZScore <- scale(df$Enrichment)
# Define the list of special genes
special_genes <- c(
"FAM30A", "LINC01671", "lnc-SLCO4A1-8", "MIR4538", "SNAR-A1", "SNAR-B2",
"SNAR-C3", "SNAR-C4", "SNAR-G1", "SNAR-G2", "TRE-TTC5-1", "TRG-CCC6-1",
"TRG-CCC4-1", "TRV-CAC5-1"
)
# Create a new column to modify the GENE names for special coloring
df$GENE_LABEL <- ifelse(df$GENE %in% special_genes,
paste0("<span style='color:red;'>", df$GENE, "</span>"),
df$GENE)
# View the resulting dataframe with enrichment and Z-scores
head(df)
# Plot a histogram of the enrichment values
ggplot(df, aes(x = Enrichment)) +
geom_histogram(bins = 30, fill = 'indianred', color = 'black', alpha = 0.7) +
theme_minimal() +
labs(title = 'Histogram of Enrichment of Variations in Gene Length vs Total Length',
x = 'Enrichment',
y = 'Frequency')
# Save the histogram
ggsave('../../results/Enrichment_histogram.pdf', width = 15)
# Sort the dataframe based on Enrichment_ZScore (high to low)
df_sorted <- df %>% arrange(asc(Enrichment_ZScore))
# Load necessary libraries
library(dplyr)   # For data manipulation
library(ggplot2) # For plotting
library(scales)   # For scaling/normalization
library(ggtext)   # For colored text in ggplot
# Read the CSV file
df <- read.csv('../../results/EXTENDED_SNP_variation_summary.csv')
# Split variation types from the 'VARIATION_TYPES' field to get the number of variations
# Assuming the number of variations is embedded in the 'VARIATION_TYPES' field
df$NUM_VARIATIONS <- sapply(df$VARIATION_TYPES, function(x) {
sum(as.numeric(gsub(".*\\((\\d+)\\).*", "\\1", unlist(strsplit(x, ",\\s*")))))
})
# Fill NA values in NUM_VARIATIONS with 0
df$NUM_VARIATIONS[is.na(df$NUM_VARIATIONS)] <- 0
# Compute the total number of variations (gene + flank) for the denominator
df$NUM_FLANKS[is.na(df$NUM_FLANKS)] <- 0  # Handle missing values in NUM_FLANKS
# Calculate the enrichment for each gene
df$Enrichment <- (df$NUM_VARIATIONS / df$GENE_LENGTH) /
((df$NUM_VARIATIONS + df$NUM_FLANKS) / df$TOTAL_LENGTH)
# Normalize the enrichment values (Z-score normalization)
df$Enrichment_ZScore <- scale(df$Enrichment)
# Define the list of special genes
special_genes <- c(
"FAM30A", "LINC01671", "lnc-SLCO4A1-8", "MIR4538", "SNAR-A1", "SNAR-B2",
"SNAR-C3", "SNAR-C4", "SNAR-G1", "SNAR-G2", "TRE-TTC5-1", "TRG-CCC6-1",
"TRG-CCC4-1", "TRV-CAC5-1"
)
# Create a new column to modify the GENE names for special coloring
df$GENE_LABEL <- ifelse(df$GENE %in% special_genes,
paste0("<span style='color:red;'>", df$GENE, "</span>"),
df$GENE)
# View the resulting dataframe with enrichment and Z-scores
head(df)
# Plot a histogram of the enrichment values
ggplot(df, aes(x = Enrichment)) +
geom_histogram(bins = 30, fill = 'indianred', color = 'black', alpha = 0.7) +
theme_minimal() +
labs(title = 'Histogram of Enrichment of Variations in Gene Length vs Total Length',
x = 'Enrichment',
y = 'Frequency')
# Save the histogram
ggsave('../../results/Enrichment_histogram.pdf', width = 15)
# Sort the dataframe based on Enrichment_ZScore (high to low)
df_sorted <- df %>% arrange(Enrichment_ZScore)
# Reorder the GENE factor based on the sorted Enrichment_ZScore
df_sorted$GENE <- factor(df_sorted$GENE, levels = df_sorted$GENE)
# Plot a sorted histogram based on Z-scores with special gene labels
ggplot(df_sorted, aes(x = reorder(GENE, Enrichment_ZScore), y = Enrichment_ZScore)) +
geom_bar(stat = 'identity', fill = 'indianred', color = 'black') +
theme_minimal() +
labs(title = 'Sorted Enrichment of Variations in Gene Length vs Total Length',
x = 'Gene',
y = 'Z-score of Enrichment') +
theme(axis.text.x = ggtext::element_markdown(angle = 90, hjust = 1)) + # Apply markdown for special genes
scale_x_discrete(labels = df_sorted$GENE_LABEL)  # Use modified labels for x-axis
# Save the sorted histogram plot
ggsave('../../results/Enrichment_sorted_histogram.pdf', width = 15)
# Load necessary libraries
library(dplyr)   # For data manipulation
library(ggplot2) # For plotting
library(scales)   # For scaling/normalization
library(ggtext)   # For colored text in ggplot
# Read the CSV file
df <- read.csv('../../results/EXTENDED_SNP_variation_summary.csv')
# Split variation types from the 'VARIATION_TYPES' field to get the number of variations
# Assuming the number of variations is embedded in the 'VARIATION_TYPES' field
df$NUM_VARIATIONS <- sapply(df$VARIATION_TYPES, function(x) {
sum(as.numeric(gsub(".*\\((\\d+)\\).*", "\\1", unlist(strsplit(x, ",\\s*")))))
})
# Fill NA values in NUM_VARIATIONS with 0
df$NUM_VARIATIONS[is.na(df$NUM_VARIATIONS)] <- 0
# Compute the total number of variations (gene + flank) for the denominator
df$NUM_FLANKS[is.na(df$NUM_FLANKS)] <- 0  # Handle missing values in NUM_FLANKS
# Calculate the enrichment for each gene
df$Enrichment <- (df$NUM_VARIATIONS / df$GENE_LENGTH) /
((df$NUM_VARIATIONS + df$NUM_FLANKS) / df$TOTAL_LENGTH)
# Normalize the enrichment values (Z-score normalization)
df$Enrichment_ZScore <- scale(df$Enrichment)
# Define the list of special genes
special_genes <- c(
"FAM30A", "LINC01671", "lnc-SLCO4A1-8", "MIR4538", "SNAR-A1", "SNAR-B2",
"SNAR-C3", "SNAR-C4", "SNAR-G1", "SNAR-G2", "TRE-TTC5-1", "TRG-CCC6-1",
"TRG-CCC4-1", "TRV-CAC5-1"
)
# Create a new column to modify the GENE names for special coloring
df$GENE_LABEL <- ifelse(df$GENE %in% special_genes,
paste0("<span style='color:red;'>", df$GENE, "</span>"),
df$GENE)
# View the resulting dataframe with enrichment and Z-scores
head(df)
# Plot a histogram of the enrichment values
ggplot(df, aes(x = Enrichment)) +
geom_histogram(bins = 30, fill = 'indianred', color = 'black', alpha = 0.7) +
theme_minimal() +
labs(title = 'Histogram of Enrichment of Variations in Gene Length vs Total Length',
x = 'Enrichment',
y = 'Frequency')
# Save the histogram
ggsave('../../results/Enrichment_histogram.pdf', width = 15)
# Reorder the GENE factor based on Enrichment_ZScore, descending
df$GENE <- factor(df$GENE, levels = df$GENE[order(-df$Enrichment_ZScore)])
# Plot a sorted histogram based on Z-scores with special gene labels
ggplot(df_sorted, aes(x = reorder(GENE, Enrichment_ZScore), y = Enrichment_ZScore)) +
geom_bar(stat = 'identity', fill = 'indianred', color = 'black') +
theme_minimal() +
labs(title = 'Sorted Enrichment of Variations in Gene Length vs Total Length',
x = 'Gene',
y = 'Z-score of Enrichment') +
theme(axis.text.x = ggtext::element_markdown(angle = 90, hjust = 1)) + # Apply markdown for special genes
scale_x_discrete(labels = df_sorted$GENE_LABEL)  # Use modified labels for x-axis
# Save the sorted histogram plot
ggsave('../../results/Enrichment_sorted_histogram.pdf', width = 15)
# Load necessary libraries
library(dplyr)   # For data manipulation
library(ggplot2) # For plotting
library(scales)   # For scaling/normalization
library(ggtext)   # For colored text in ggplot
# Read the CSV file
df <- read.csv('../../results/EXTENDED_SNP_variation_summary.csv')
# Split variation types from the 'VARIATION_TYPES' field to get the number of variations
# Assuming the number of variations is embedded in the 'VARIATION_TYPES' field
df$NUM_VARIATIONS <- sapply(df$VARIATION_TYPES, function(x) {
sum(as.numeric(gsub(".*\\((\\d+)\\).*", "\\1", unlist(strsplit(x, ",\\s*")))))
})
# Fill NA values in NUM_VARIATIONS with 0
df$NUM_VARIATIONS[is.na(df$NUM_VARIATIONS)] <- 0
# Compute the total number of variations (gene + flank) for the denominator
df$NUM_FLANKS[is.na(df$NUM_FLANKS)] <- 0  # Handle missing values in NUM_FLANKS
# Calculate the enrichment for each gene
df$Enrichment <- (df$NUM_VARIATIONS / df$GENE_LENGTH) /
((df$NUM_VARIATIONS + df$NUM_FLANKS) / df$TOTAL_LENGTH)
# Normalize the enrichment values (Z-score normalization)
df$Enrichment_ZScore <- scale(df$Enrichment)
# Define the list of special genes
special_genes <- c(
"FAM30A", "LINC01671", "lnc-SLCO4A1-8", "MIR4538", "SNAR-A1", "SNAR-B2",
"SNAR-C3", "SNAR-C4", "SNAR-G1", "SNAR-G2", "TRE-TTC5-1", "TRG-CCC6-1",
"TRG-CCC4-1", "TRV-CAC5-1"
)
# Create a new column to modify the GENE names for special coloring
df$GENE_LABEL <- ifelse(df$GENE %in% special_genes,
paste0("<span style='color:red;'>", df$GENE, "</span>"),
df$GENE)
# Plot a histogram of the enrichment values
plot<-ggplot(df, aes(x = Enrichment)) +
geom_histogram(bins = 30, fill = 'indianred', color = 'black', alpha = 0.7) +
theme_minimal() +
labs(title = 'Histogram of Enrichment of Variations in Gene Length vs Total Length',
x = 'Enrichment',
y = 'Frequency')
# Save the histogram
ggsave('../../results/SNP155_Enrichment_histogram.pdf', plot = plot, width = 15)
# Reorder the GENE factor based on Enrichment_ZScore, descending
df$GENE <- factor(df$GENE, levels = df$GENE[order(-df$Enrichment_ZScore)])
# Plot a sorted histogram based on Z-scores with special gene labels
plot <- ggplot(df_sorted, aes(x = reorder(GENE, Enrichment_ZScore), y = Enrichment_ZScore)) +
geom_bar(stat = 'identity', fill = 'indianred', color = 'black') +
theme_minimal() +
labs(title = 'Sorted Enrichment of Variations in Gene Length vs Total Length',
x = 'Gene',
y = 'Z-score of Enrichment') +
theme(axis.text.x = ggtext::element_markdown(angle = 90, hjust = 1)) + # Apply markdown for special genes
scale_x_discrete(labels = df_sorted$GENE_LABEL)  # Use modified labels for x-axis
# Save the sorted histogram plot
ggsave('../../results/SNP155_Enrichment_sorted_histogram.pdf', plot = plot, width = 15)
# Load necessary libraries
library(dplyr)   # For data manipulation
library(ggplot2) # For plotting
library(scales)   # For scaling/normalization
library(ggtext)   # For colored text in ggplot
# Read the CSV file
df <- read.csv('../../results/EXTENDED_SNP_variation_summary.csv')
# Split variation types from the 'VARIATION_TYPES' field to get the number of variations
# Assuming the number of variations is embedded in the 'VARIATION_TYPES' field
df$NUM_VARIATIONS <- sapply(df$VARIATION_TYPES, function(x) {
sum(as.numeric(gsub(".*\\((\\d+)\\).*", "\\1", unlist(strsplit(x, ",\\s*")))))
})
# Fill NA values in NUM_VARIATIONS with 0
df$NUM_VARIATIONS[is.na(df$NUM_VARIATIONS)] <- 0
# Compute the total number of variations (gene + flank) for the denominator
df$NUM_FLANKS[is.na(df$NUM_FLANKS)] <- 0  # Handle missing values in NUM_FLANKS
# Calculate the enrichment for each gene
df$Enrichment <- (df$NUM_VARIATIONS / df$GENE_LENGTH) /
((df$NUM_VARIATIONS + df$NUM_FLANKS) / df$TOTAL_LENGTH)
# Normalize the enrichment values (Z-score normalization)
df$Enrichment_ZScore <- scale(df$Enrichment)
# Define the list of special genes
special_genes <- c(
"FAM30A", "LINC01671", "lnc-SLCO4A1-8", "MIR4538", "SNAR-A1", "SNAR-B2",
"SNAR-C3", "SNAR-C4", "SNAR-G1", "SNAR-G2", "TRE-TTC5-1", "TRG-CCC6-1",
"TRG-CCC4-1", "TRV-CAC5-1"
)
# Plot a sorted histogram based on Z-scores with special gene labels
plot <- ggplot(df_sorted, aes(x = reorder(GENE, Enrichment_ZScore), y = Enrichment_ZScore)) +
geom_bar(stat = 'identity', fill = 'indianred', color = 'black') +
theme_minimal() +
labs(title = 'Sorted Enrichment of Variations in Gene Length vs Total Length',
x = 'Gene',
y = 'Z-score of Enrichment') +
theme(axis.text.x = ggtext::element_markdown(angle = 90, hjust = 1)) + # Apply markdown for special genes
scale_x_discrete(labels = df_sorted$GENE_LABEL)  # Use modified labels for x-axis
# Save the histogram
ggsave('../../results/SNP155_Enrichment_histogram.pdf', plot = plot, width = 15)
# Reorder the GENE factor based on Enrichment_ZScore, descending
df$GENE <- factor(df$GENE, levels = df$GENE[order(-df$Enrichment_ZScore)])
# Plot a sorted histogram based on Z-scores with special gene labels
plot <- ggplot(df_sorted, aes(x = reorder(GENE, Enrichment_ZScore), y = Enrichment_ZScore)) +
geom_bar(stat = 'identity', fill = 'indianred', color = 'black') +
theme_minimal() +
labs(title = 'Sorted Enrichment of Variations in Gene Length vs Total Length',
x = 'Gene',
y = 'Z-score of Enrichment') +
theme(axis.text.x = ggtext::element_markdown(angle = 90, hjust = 1)) + # Apply markdown for special genes
scale_x_discrete(labels = df_sorted$GENE_LABEL)  # Use modified labels for x-axis
# Save the sorted histogram plot
ggsave('../../results/SNP155_Enrichment_sorted_histogram.pdf', plot = plot, width = 15)
# Load necessary libraries
library(dplyr)   # For data manipulation
library(ggplot2) # For plotting
library(scales)   # For scaling/normalization
library(ggtext)   # For colored text in ggplot
# Read the CSV file
df <- read.csv('../../results/EXTENDED_SNP_variation_summary.csv')
# Split variation types from the 'VARIATION_TYPES' field to get the number of variations
# Assuming the number of variations is embedded in the 'VARIATION_TYPES' field
df$NUM_VARIATIONS <- sapply(df$VARIATION_TYPES, function(x) {
sum(as.numeric(gsub(".*\\((\\d+)\\).*", "\\1", unlist(strsplit(x, ",\\s*")))))
})
# Fill NA values in NUM_VARIATIONS with 0
df$NUM_VARIATIONS[is.na(df$NUM_VARIATIONS)] <- 0
# Compute the total number of variations (gene + flank) for the denominator
df$NUM_FLANKS[is.na(df$NUM_FLANKS)] <- 0  # Handle missing values in NUM_FLANKS
# Calculate the enrichment for each gene
df$Enrichment <- (df$NUM_VARIATIONS / df$GENE_LENGTH) /
((df$NUM_VARIATIONS + df$NUM_FLANKS) / df$TOTAL_LENGTH)
# Normalize the enrichment values (Z-score normalization)
df$Enrichment_ZScore <- scale(df$Enrichment)
# Define the list of special genes
special_genes <- c(
"FAM30A", "LINC01671", "lnc-SLCO4A1-8", "MIR4538", "SNAR-A1", "SNAR-B2",
"SNAR-C3", "SNAR-C4", "SNAR-G1", "SNAR-G2", "TRE-TTC5-1", "TRG-CCC6-1",
"TRG-CCC4-1", "TRV-CAC5-1"
)
# Plot a sorted histogram based on Z-scores with special gene labels
plot <- ggplot(df, aes(x = reorder(GENE, Enrichment_ZScore), y = Enrichment_ZScore)) +
geom_bar(stat = 'identity', fill = 'indianred', color = 'black') +
theme_minimal() +
labs(title = 'Enrichment of Variations in Gene Length vs Total Length',
x = 'Gene',
y = 'Z-score of Enrichment') +
theme(axis.text.x = ggtext::element_markdown(angle = 90, hjust = 1)) + # Apply markdown for special genes
scale_x_discrete(labels = df$GENE_LABEL)  # Use modified labels for x-axis
# Save the histogram
ggsave('../../results/SNP155_Enrichment_histogram.pdf', plot = plot, width = 15)
# Reorder the GENE factor based on Enrichment_ZScore, descending
df$GENE <- factor(df$GENE, levels = df$GENE[order(-df$Enrichment_ZScore)])
# Plot a sorted histogram based on Z-scores with special gene labels
plot <- ggplot(df_sorted, aes(x = reorder(GENE, Enrichment_ZScore), y = Enrichment_ZScore)) +
geom_bar(stat = 'identity', fill = 'indianred', color = 'black') +
theme_minimal() +
labs(title = 'Sorted Enrichment of Variations in Gene Length vs Total Length',
x = 'Gene',
y = 'Z-score of Enrichment') +
theme(axis.text.x = ggtext::element_markdown(angle = 90, hjust = 1)) + # Apply markdown for special genes
scale_x_discrete(labels = df_sorted$GENE_LABEL)  # Use modified labels for x-axis
# Save the sorted histogram plot
ggsave('../../results/SNP155_Enrichment_sorted_histogram.pdf', plot = plot, width = 15)
# Load necessary libraries
library(dplyr)   # For data manipulation
library(ggplot2) # For plotting
library(scales)   # For scaling/normalization
library(ggtext)   # For colored text in ggplot
# Read the CSV file
df <- read.csv('../../results/EXTENDED_SNP_variation_summary.csv')
# Ensure NUM_VARIATIONS is in the dataset and handle missing values
df$NUM_VARIATIONS[is.na(df$NUM_VARIATIONS)] <- 0
df$NUM_FLANKS[is.na(df$NUM_FLANKS)] <- 0  # Handle missing values in NUM_FLANKS
# Calculate the SNP_Enrichment for each gene
df$Enrichment <- (df$NUM_VARIATIONS / df$GENE_LENGTH) /
((df$NUM_VARIATIONS + df$NUM_FLANKS) / df$TOTAL_LENGTH)
# Normalize the enrichment values (Z-score normalization)
df$Enrichment_ZScore <- scale(df$Enrichment)
# List of special genes
special_genes <- c(
"FAM30A", "LINC01671", "lnc-SLCO4A1-8", "MIR4538", "SNAR-A1", "SNAR-B2",
"SNAR-C3", "SNAR-C4", "SNAR-G1", "SNAR-G2", "TRE-TTC5-1", "TRG-CCC6-1",
"TRG-CCC4-1", "TRV-CAC5-1"
)
# Modify the gene names to include HTML-style color tags for special genes
df$GENE_LABEL <- ifelse(df$GENE %in% special_genes,
paste0("<span style='color:red;'>", df$GENE, "</span>"),
df$GENE)
# View the resulting dataframe with enrichment and Z-scores
head(df)
# Plot a histogram with unsorted data (raw enrichment Z-scores)
plot_unsorted <- ggplot(df, aes(x = GENE, y = Enrichment_ZScore)) +
geom_bar(stat = 'identity', fill = 'indianred', color = 'black') +
theme_minimal() +
labs(title = 'Enrichment of Variations in Gene Length vs Total Length',
x = 'Gene',
y = 'Z-score of Enrichment') +
theme(axis.text.x = ggtext::element_markdown(angle = 90, hjust = 1)) +  # Apply markdown for special genes
scale_x_discrete(labels = df$GENE_LABEL)  # Use modified labels for x-axis
# Save the unsorted plot
ggsave('../../results/SNP_Enrichment_unsorted_histogram.pdf', plot = plot_unsorted, width = 15)
# Sort the dataframe based on Enrichment_ZScore (high to low)
df_sorted <- df %>% arrange(desc(Enrichment_ZScore))
# Reorder the GENE factor based on the sorted Enrichment_ZScore
df_sorted$GENE <- factor(df_sorted$GENE, levels = df_sorted$GENE)
# Plot a sorted histogram based on Z-scores with special gene labels
plot_sorted <- ggplot(df_sorted, aes(x = reorder(GENE, Enrichment_ZScore), y = Enrichment_ZScore)) +
geom_bar(stat = 'identity', fill = 'indianred', color = 'black') +
theme_minimal() +
labs(title = 'Sorted Enrichment of Variations in Gene Length vs Total Length',
x = 'Gene',
y = 'Z-score of Enrichment') +
theme(axis.text.x = ggtext::element_markdown(angle = 90, hjust = 1)) +  # Apply markdown for special genes
scale_x_discrete(labels = df_sorted$GENE_LABEL)  # Use modified labels for x-axis
# Save the sorted plot
ggsave('../../results/SNP_Enrichment_sorted_histogram.pdf', plot = plot_sorted, width = 15)
# Load necessary libraries
library(dplyr)   # For data manipulation
library(ggplot2) # For plotting
library(scales)   # For scaling/normalization
library(ggtext)   # For colored text in ggplot
# Read the CSV file
df <- read.csv('../../results/EXTENDED_SNP_variation_summary.csv')
# Ensure NUM_VARIATIONS is in the dataset and handle missing values
df$NUM_VARIATIONS[is.na(df$NUM_VARIATIONS)] <- 0
df$NUM_FLANKS[is.na(df$NUM_FLANKS)] <- 0  # Handle missing values in NUM_FLANKS
# Calculate the SNP_Enrichment for each gene
df$Enrichment <- (df$NUM_VARIATIONS / df$GENE_LENGTH) /
((df$NUM_VARIATIONS + df$NUM_FLANKS) / df$TOTAL_LENGTH)
# Normalize the enrichment values (Z-score normalization)
df$Enrichment_ZScore <- scale(df$Enrichment)
# List of special genes
special_genes <- c(
"FAM30A", "LINC01671", "lnc-SLCO4A1-8", "MIR4538", "SNAR-A1", "SNAR-B2",
"SNAR-C3", "SNAR-C4", "SNAR-G1", "SNAR-G2", "TRE-TTC5-1", "TRG-CCC6-1",
"TRG-CCC4-1", "TRV-CAC5-1"
)
# Modify the gene names to include HTML-style color tags for special genes
df$GENE_LABEL <- ifelse(df$GENE %in% special_genes,
paste0("<span style='color:red;'>", df$GENE, "</span>"),
df$GENE)
# View the resulting dataframe with enrichment and Z-scores
head(df)
# Plot a histogram with unsorted data (raw enrichment Z-scores)
plot_unsorted <- ggplot(df, aes(x = GENE, y = Enrichment_ZScore)) +
geom_bar(stat = 'identity', fill = 'indianred', color = 'black') +
theme_minimal() +
labs(title = 'Enrichment of Variations in Gene Length vs Total Length',
x = 'Gene',
y = 'Z-score of Enrichment') +
theme(axis.text.x = ggtext::element_markdown(angle = 90, hjust = 1)) +  # Apply markdown for special genes
scale_x_discrete(labels = df$GENE_LABEL)  # Use modified labels for x-axis
# Save the unsorted plot
ggsave('../../results/SNP_Enrichment_histogram.pdf', plot = plot_unsorted, width = 15)
# Sort the dataframe based on Enrichment_ZScore (high to low)
df_sorted <- df %>% arrange(Enrichment_ZScore)
# Reorder the GENE factor based on the sorted Enrichment_ZScore
df_sorted$GENE <- factor(df_sorted$GENE, levels = df_sorted$GENE)
# Plot a sorted histogram based on Z-scores with special gene labels
plot_sorted <- ggplot(df_sorted, aes(x = reorder(GENE, Enrichment_ZScore), y = Enrichment_ZScore)) +
geom_bar(stat = 'identity', fill = 'indianred', color = 'black') +
theme_minimal() +
labs(title = 'Sorted Enrichment of Variations in Gene Length vs Total Length',
x = 'Gene',
y = 'Z-score of Enrichment') +
theme(axis.text.x = ggtext::element_markdown(angle = 90, hjust = 1)) +  # Apply markdown for special genes
scale_x_discrete(labels = df_sorted$GENE_LABEL)  # Use modified labels for x-axis
# Save the sorted plot
ggsave('../../results/SNP_Enrichment_sorted_histogram.pdf', plot = plot_sorted, width = 15)
# Load necessary libraries
library(dplyr)   # For data manipulation
library(ggplot2) # For plotting
library(scales)   # For scaling/normalization
library(ggtext)   # For colored text in ggplot
# Read the CSV file
df <- read.csv('../../results/EXTENDED_SNP_variation_summary.csv')
# Ensure NUM_VARIATIONS is in the dataset and handle missing values
df$NUM_VARIATIONS[is.na(df$NUM_VARIATIONS)] <- 0
df$NUM_FLANKS[is.na(df$NUM_FLANKS)] <- 0  # Handle missing values in NUM_FLANKS
# Calculate the SNP_Enrichment for each gene
df$Enrichment <- (df$NUM_VARIATIONS / df$GENE_LENGTH) /
((df$NUM_VARIATIONS + df$NUM_FLANKS) / df$TOTAL_LENGTH)
# Normalize the enrichment values (Z-score normalization)
df$Enrichment_ZScore <- scale(df$Enrichment)
# List of special genes
special_genes <- c(
"FAM30A", "LINC01671", "lnc-SLCO4A1-8", "MIR4538", "SNAR-A1", "SNAR-B2",
"SNAR-C3", "SNAR-C4", "SNAR-G1", "SNAR-G2", "TRE-TTC5-1", "TRG-CCC6-1",
"TRG-CCC4-1", "TRV-CAC5-1"
)
# Modify the gene names to include HTML-style color tags for special genes
df$GENE_LABEL <- ifelse(df$GENE %in% special_genes,
paste0("<span style='color:red;'>", df$GENE, "</span>"),
df$GENE)
# View the resulting dataframe with enrichment and Z-scores
head(df)
# Plot a histogram with unsorted data (raw enrichment Z-scores)
plot_unsorted <- ggplot(df, aes(x = GENE, y = Enrichment_ZScore)) +
geom_bar(stat = 'identity', fill = 'indianred') +
theme_minimal() +
labs(title = 'Enrichment of Variations in Gene Length vs Total Length',
x = 'Gene',
y = 'Z-score of Enrichment') +
theme(axis.text.x = ggtext::element_markdown(angle = 90, hjust = 1)) +  # Apply markdown for special genes
scale_x_discrete(labels = df$GENE_LABEL)  # Use modified labels for x-axis
# Save the unsorted plot
ggsave('../../results/SNP_Enrichment_histogram.pdf', plot = plot_unsorted, width = 15)
# Sort the dataframe based on Enrichment_ZScore (high to low)
df_sorted <- df %>% arrange(Enrichment_ZScore)
# Reorder the GENE factor based on the sorted Enrichment_ZScore
df_sorted$GENE <- factor(df_sorted$GENE, levels = df_sorted$GENE)
# Plot a sorted histogram based on Z-scores with special gene labels
plot_sorted <- ggplot(df_sorted, aes(x = reorder(GENE, Enrichment_ZScore), y = Enrichment_ZScore)) +
geom_bar(stat = 'identity', fill = 'indianred') +
theme_minimal() +
labs(title = 'Sorted Enrichment of Variations in Gene Length vs Total Length',
x = 'Gene',
y = 'Z-score of Enrichment') +
theme(axis.text.x = ggtext::element_markdown(angle = 90, hjust = 1)) +  # Apply markdown for special genes
scale_x_discrete(labels = df_sorted$GENE_LABEL)  # Use modified labels for x-axis
# Save the sorted plot
ggsave('../../results/SNP_Enrichment_sorted_histogram.pdf', plot = plot_sorted, width = 15)
